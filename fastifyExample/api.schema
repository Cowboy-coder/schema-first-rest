type User {
  id: String!
  address: {
    street: String
  }
}

type Query {
  filter:
   | "id"
   | "address"
}

type FieldError {
  field: String!
  message: String!
}
type Error
| { message: String! } 
| {
    message: String!
    fields: [FieldError!]!
  } 

type AuthorizationHeader {
  authorization: String!
}

login: POST /login {
  body: {
    username: String!
    password: String!
  }
  200: {
    body: {
      token: String
    }
  }
  400: {
    body: Error
  }
} 

getUsers: GET /users {
  headers: AuthorizationHeader
  200: {
    body: [User]
  }
} 

getUser: GET /users/:id {
  params: {
    id: [Int!]!
  }
  query: Query

  200: {
    body: {
      id: String!
      name: String
      address: {
        city: String!
        street: String!
        country:
          | "Sweden"
          | "UK"!
      }
    }
    headers: {
      authorization: String!
    }
  }
  204: {}
  404: {
    body: Error
  }
} 

postUser: POST /users {
  body: {
    user: User!
  }
  200: {
    body: User
  }
  404: {
    body: Error
  }
} 
