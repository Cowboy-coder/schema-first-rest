type AuthenticatedRoute {
  authorization: String!
}

type Field {
  name: String!
  message: String!
}

type Error {
  message: String!
  fields: [Field!]!
}

type UserType
 | "admin"
 | "user"


type User {
  id: Int!
  username: String!
  age: Int!
  type: UserType!
  isCool: Boolean!
}

health: GET /health {
  200: {
    body: {
      ok: "ok"!
    }
  }
}

login: POST /login {
  body: {
    username: String!
    password: String!
  }
  200: {
    body: {
      token: String!
    }
  }
  400: {
    body: Error
  }
}

logout: POST /logout {
  204: {}
}


getUser: GET /users/:id(Int) {

  200: {
    body: User
  }

  400: {
    body: Error
  }
}

getUsers: GET /users {
  headers: AuthenticatedRoute

  query: {
    q: String
  }

  200: {
    body: [User!]
  }

  400: {
    body: Error
  }
}

postUser: POST /users {
  headers: AuthenticatedRoute

  body: {
    username: String!
    age: Int!
    type: UserType!
    isCool: Boolean!
  }

  200: {
    body: User
  }

  400: {
    body: Error
  }
}

updateUser: PATCH /users/:id(Int) {
  headers: AuthenticatedRoute

  body: {
    username: String
    age: Int
    isCool: Boolean
  }

  200: {
    body: User
  }

  400: {
    body: Error
  }

  404: {
    body: Error
  }
}
